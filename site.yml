---
- hosts: localhost
  connection: local
  gather_facts: no

  vars:
    snap_pkgs:
      - code
      - fluxctl
      - go
      - goland
      - helm
      - hugo
      - jq
      - kubectl
      - postman
      - pycharm-professional
      - terraform

    apt_repos:
      - ppa:mmstick76/alacritty
      - deb [arch=amd64] https://download.docker.com/linux/ubuntu disco stable

    apt_pkgs:
      - alacritty
      - curl
      - fish
      - go-dep
      - htop
      - tig
      - tmux
      - vagrant
      - vim
      # Docker dependencies:
      - apt-transport-https
      - ca-certificates
      - containerd.io
      - docker-ce
      - docker-ce-cli
      - gnupg-agent
      - software-properties-common
      # Laptop packages:
      - pm-utils

    deb_pkgs:
      - https://storage.googleapis.com/minikube/releases/latest/minikube_1.6.2.deb
      - https://download.virtualbox.org/virtualbox/6.1.0/virtualbox-6.1_6.1.0-135406~Ubuntu~bionic_amd64.deb

    git_repos:
      - { repo: "https://github.com/ahmetb/kubectx", version: v0.7.1 }
      - { repo: "https://github.com/johanhaleby/kubetail", version: 1.6.10 }
      - { repo: "https://github.com/fboender/multi-git-status", version: HEAD }

    # If src is a file it will be symlinked to a dest
    # If src is a directory, each file inside will be symlinked to a dest dir.
    # This allows symlinking files into existing directories with other files not tracked by our dotfiles (eg: .config/fish/functions)
    symlinks:
      - { src: "{{ playbook_dir }}/files/dotfiles/git/gitconfig", dest: ~/.gitconfig }
      - { src: "{{ playbook_dir }}/files/dotfiles/git/gitignore_global", dest: ~/.gitignore_global }
      - { src: "{{ playbook_dir }}/files/dotfiles/alacritty/alacritty.yml", dest: ~/.config/alacritty/alacritty.yml }
      - { src: "{{ playbook_dir }}/files/dotfiles/tmux/tmux.conf", dest: ~/.tmux.conf }
      - { src: "{{ playbook_dir }}/files/dotfiles/fish", dest: ~/.config/fish }
      - { src: "{{ playbook_dir }}/files/dotfiles/fish/completions", dest: ~/.config/fish/completions }
      - { src: "{{ playbook_dir }}/files/dotfiles/fish/functions", dest: ~/.config/fish/functions }
      - { src: "{{ playbook_dir }}/files/dotfiles/vscode", dest: ~/.config/Code/User }
      - { src: ~/workspace/tools/kubectx/kubectx, dest: ~/.local/bin/kubectx }
      - { src: ~/workspace/tools/kubectx/kubens, dest: ~/.local/bin/kubens }
      - { src: ~/workspace/tools/kubetail/kubetail, dest: ~/.local/bin/kubetail }
      - { src: ~/workspace/tools/multi-git-status/mgitstatus, dest: ~/.local/bin/mgitstatus }

  tasks:
    - name: Ensure workspace directory
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - ~/workspace
        - ~/workspace/tools

    - name: Install snaps
      become: yes
      snap:
        name: "{{ item }}"
        classic: yes
      loop: "{{ snap_pkgs }}"

    # TODO: Should we move it to vars?
    - name: Add Docker's apt key
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        state: present

    - name: Add apt repos
      become: yes
      apt_repository:
        repo: "{{ item }}"
        state: present
        update_cache: yes
      loop: "{{ apt_repos }}"

    - name: Install apt packages
      become: yes
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop: "{{ apt_pkgs }}"

    - name: Install deb packages
      become: yes
      apt:
        deb: "{{ item }}"
      loop: "{{ deb_pkgs }}"

    - name: Add user to docker group
      become: yes
      user:
        name: "{{ lookup('env', 'USER') }}"
        groups: "docker"
        append: "yes"

    - name: Clone git repos
      git:
        repo: "{{ item.repo }}"
        version: "{{ item.version }}"
        dest: "~/workspace/tools/{{ item.repo | basename }}"
      loop: "{{ git_repos }}"

    - name: Create symlinks
      include_tasks: symlink.yml
      loop: "{{ symlinks }}"
      tags: dotfiles

    # Running "fisher" without any arguments will install/update packages defined in fishfile
    - name: Install fisher packages
      command: fish -c fisher
      changed_when: false
      tags: dotfiles

    # TODO: find a way to make it idempotent
    # HACK! Running "fisher" will overwrite the fish_prompt to the default one used by the "pure" package
    # We need to overwrite it back to "our" promt so that kubectl context is included
    - name: Overwrite fish_prompt
      file:
        src: "{{ playbook_dir }}/files/dotfiles/fish/functions/fish_prompt.fish"
        dest: ~/.config/fish/functions/fish_prompt.fish
        state: link
        force: yes
      tags: dotfiles
